Flex Nedir?

Hizalama yapmak için esneklik sağlayan bir yapı olduğu için tercih edilmektedir.

A - Kapsayıcılar için fflex özellikleri.(wrapper)
1) display: flex;

Flex konteynırımızın içerisindeki elementlerin ytay mı yoksa düşey mi hizada devam edeceklerini (akacaklarını) belirttiğimiz ifadedir.
default ayarı row olarak gelir. Bunu column ya da column reverse ya da row reverse yaparsak ilgili eksenlerde hizalanır. Reverse komutunu matematikteki simetri şeklinde düşünebilirsiniz. 

2 ) flex-direction: column | column-reverse | row | row-reverse

3) flex-wrap özelliği;
default olarak flex ögeleri(elementleri) tek bir satıra sığmaya çalışmaktadırlar. bunu alt satırlardan devam ettirebilmemiz için wrap özeliğini aktive etmemiz grekir.
nowrap | wrap | wrap-reverse

4) flex-flow

flex-direction ve flex-wrap özelliklerini beraber kullanabilmemize yarayan komuttur.

örneğin stil dosyamız şöyleyse;

.container {
    flex-direction: column-reverse;
    flex-wrap: wrap
}

yazımının yerine şu yazımı kullanabiliriz;

.container {
    flex-flow: column-reverse wrap
}

5) justify-content

Konteynıra ait ögelerin yatay eksendeki hareketlerini kontrol eden özeliktir. Bu özellik flex-drection değiştiğinde align-items ile yer değiştirmektedir.

flex-start | flex-end | center | space-between | space-around | space-evenly

space-between --> ilk ögeyi flex-starta son ögeyi flex-ende yapıştırıyor. ortadakileri de eşit aralık olacak şekilde hizalıyor.

space-around --> ilk ve son ögenin sayfanın başlangıç ve bitiş noktalarıyla olan uzaklıkları eşit olur fakat bu uzaklık diğer ögeler ile arasındaki uzaklıklara eşit dğeildir. Ama yine tüm ögeler birbirleriyle eşit uzaklıktadır.

space-evenly --> bu özellikte ilk ve son ögenin sayfanın çerçevesine uzaklığı ile ögeler arasındaki uzaklıklar yani tüm boşluklar birbirine eşit olmaktadır. 


6) align-items : düşey eksende hizalamak için kullandığımız özelliktir. Bu özellik de yine kapsayıcının direction'ı değiştiğinde justify-content ile yer değiştirmektedir. 
aldığı özellikler

flex-start | flex-end | center | baseline | stretch
başlangıca | bitişe | ortaya | içerideki ilk satıra göre hizalama alır | hizalama yapmaz default kapsayıcı değeridir.ögelerin yüksekliklerini kapsayıcıya göre uzatır.

7) align-content: 

Çok satırlı oluşumlarda tüm ögelerin dikey eksendeki hizasını belirlemek için kullanılır. ve ögeleri toparlar.
flex start | flex-end | center | stretch | space-between | space-evenly
----------------------------------------------------------------------------------------------------

B) Elementlere Ait özellikler
Burada anlatacağımız özellikler kapsayıcıya değil; alt elementlere kullanmamız gereken özelliklerdir. 

1) order: ögelerin sıralanmasında kullandığımız bir yöntemdir. varsayılan order değeri 0'dır. burayı bir sayı doğrusu gibi düşünerek atayacağımız order değerleri ile elementleri sıralayabiliriz.

2) flex-grow : ögelerin birbirlerine oranla büyüklüklerini otomatik olarak ayarlayan komut. vereceğiniz katsayılara göre responsive olarak ögeleri büyütüp küçültür ve birbirleri aralarındaki oran bozulmaz.

.a{
    flex-grow: 1
}

3) flex-shrink growun tam tersidir.

4) flex-basis: burda da yine birbirlerine oranla büyüklükleri ayarlanır. varsayılan değer auto. Eğer ki bu değer 0 verilirse sadece içindeki eleman kadar bir genişliğe sahip olur. Bunun dışında örneğin bir ögeye 40% değer verirseniz diğerlerini de otomaik olarak sığacak şekilde ayarlar. ve yüzde 40 verdiğimiz özellik diğerine 60% 'lık bir alan bırakacağı için diğerleri buna göre boyutunu ayarlamış olur. burada px, em, rem, % gibi ifadelerle boyut vermek serbesttir.

5) flex özelliği --> sırasıyla flex-grow, flex-shrink ve flex-basis özelliklerinin tek seferde yazılmasını sağlar.  ilk kısım zorunlu diğerleri opsiyoneldir.

.öge{
    flex: 1 1 auto 
}

6) align-self kullanımı: align-content ile aynı kullanıma sahiptir. Tek farkı kapsayıcıya değil ögeye uygulanmasıdır. 







